
uniform Image xin;
uniform Image dense1;

vec4 effect(vec4 color, Image tex, vec2 texture_coords, vec2 screen_coords)
{
    vec3 d = vec3(-1.0, 0.0, 1.0);
    vec2 cs = vec2(64.0);
    vec4 offset = vec4(0.0, cs.x, cs.x * 2.0, cs.x * 3.0);
    vec2 uv = mod(screen_coords.xy, cs);
    float ci = floor(screen_coords.x / cs.x);
    vec2 xss = vec2(64.0 * 4.0, 64.0);
    vec2 hss = vec2(64.0 * 32.0, 64.0);
    vec2 dss = vec2(49.0, 32.0);

vec4 n000 = Texel(xin, (mod(uv + d.xx, cs) + offset.xx) / xss);
vec4 n001 = Texel(xin, (mod(uv + d.xy, cs) + offset.xx) / xss);
vec4 n002 = Texel(xin, (mod(uv + d.xz, cs) + offset.xx) / xss);
vec4 n010 = Texel(xin, (mod(uv + d.yx, cs) + offset.xx) / xss);
vec4 n011 = Texel(xin, (uv + offset.xx) / xss);
vec4 n012 = Texel(xin, (mod(uv + d.yz, cs) + offset.xx) / xss);
vec4 n020 = Texel(xin, (mod(uv + d.zx, cs) + offset.xx) / xss);
vec4 n021 = Texel(xin, (mod(uv + d.zy, cs) + offset.xx) / xss);
vec4 n022 = Texel(xin, (mod(uv + d.zz, cs) + offset.xx) / xss);

vec4 n100 = Texel(xin, (mod(uv + d.xx, cs) + offset.yx) / xss);
vec4 n101 = Texel(xin, (mod(uv + d.xy, cs) + offset.yx) / xss);
vec4 n102 = Texel(xin, (mod(uv + d.xz, cs) + offset.yx) / xss);
vec4 n110 = Texel(xin, (mod(uv + d.yx, cs) + offset.yx) / xss);
vec4 n111 = Texel(xin, (uv + offset.yx) / xss);
vec4 n112 = Texel(xin, (mod(uv + d.yz, cs) + offset.yx) / xss);
vec4 n120 = Texel(xin, (mod(uv + d.zx, cs) + offset.yx) / xss);
vec4 n121 = Texel(xin, (mod(uv + d.zy, cs) + offset.yx) / xss);
vec4 n122 = Texel(xin, (mod(uv + d.zz, cs) + offset.yx) / xss);

vec4 n200 = Texel(xin, (mod(uv + d.xx, cs) + offset.zx) / xss);
vec4 n201 = Texel(xin, (mod(uv + d.xy, cs) + offset.zx) / xss);
vec4 n202 = Texel(xin, (mod(uv + d.xz, cs) + offset.zx) / xss);
vec4 n210 = Texel(xin, (mod(uv + d.yx, cs) + offset.zx) / xss);
vec4 n211 = Texel(xin, (uv + offset.zx) / xss);
vec4 n212 = Texel(xin, (mod(uv + d.yz, cs) + offset.zx) / xss);
vec4 n220 = Texel(xin, (mod(uv + d.zx, cs) + offset.zx) / xss);
vec4 n221 = Texel(xin, (mod(uv + d.zy, cs) + offset.zx) / xss);
vec4 n222 = Texel(xin, (mod(uv + d.zz, cs) + offset.zx) / xss);

vec4 n300 = Texel(xin, (mod(uv + d.xx, cs) + offset.wx) / xss);
vec4 n301 = Texel(xin, (mod(uv + d.xy, cs) + offset.wx) / xss);
vec4 n302 = Texel(xin, (mod(uv + d.xz, cs) + offset.wx) / xss);
vec4 n310 = Texel(xin, (mod(uv + d.yx, cs) + offset.wx) / xss);
vec4 n311 = Texel(xin, (uv + offset.wx) / xss);
vec4 n312 = Texel(xin, (mod(uv + d.yz, cs) + offset.wx) / xss);
vec4 n320 = Texel(xin, (mod(uv + d.zx, cs) + offset.wx) / xss);
vec4 n321 = Texel(xin, (mod(uv + d.zy, cs) + offset.wx) / xss);
vec4 n322 = Texel(xin, (mod(uv + d.zz, cs) + offset.wx) / xss);

float x0 = n020.x + 2.0 * n021.x + n022.x - n000.x - 2.0 * n001.x - n002.x;
float x1 = n002.x + 2.0 * n012.x + n022.x - n000.x - 2.0 * n010.x - n020.x;
float x2 = n020.y + 2.0 * n021.y + n022.y - n000.y - 2.0 * n001.y - n002.y;
float x3 = n002.y + 2.0 * n012.y + n022.y - n000.y - 2.0 * n010.y - n020.y;
float x4 = n020.z + 2.0 * n021.z + n022.z - n000.z - 2.0 * n001.z - n002.z;
float x5 = n002.z + 2.0 * n012.z + n022.z - n000.z - 2.0 * n010.z - n020.z;
float x6 = n020.w + 2.0 * n021.w + n022.w - n000.w - 2.0 * n001.w - n002.w;
float x7 = n002.w + 2.0 * n012.w + n022.w - n000.w - 2.0 * n010.w - n020.w;
float x8 = n120.x + 2.0 * n121.x + n122.x - n100.x - 2.0 * n101.x - n102.x;
float x9 = n102.x + 2.0 * n112.x + n122.x - n100.x - 2.0 * n110.x - n120.x;
float x10 = n120.y + 2.0 * n121.y + n122.y - n100.y - 2.0 * n101.y - n102.y;
float x11 = n102.y + 2.0 * n112.y + n122.y - n100.y - 2.0 * n110.y - n120.y;
float x12 = n120.z + 2.0 * n121.z + n122.z - n100.z - 2.0 * n101.z - n102.z;
float x13 = n102.z + 2.0 * n112.z + n122.z - n100.z - 2.0 * n110.z - n120.z;
float x14 = n120.w + 2.0 * n121.w + n122.w - n100.w - 2.0 * n101.w - n102.w;
float x15 = n102.w + 2.0 * n112.w + n122.w - n100.w - 2.0 * n110.w - n120.w;
float x16 = n220.x + 2.0 * n221.x + n222.x - n200.x - 2.0 * n201.x - n202.x;
float x17 = n202.x + 2.0 * n212.x + n222.x - n200.x - 2.0 * n210.x - n220.x;
float x18 = n220.y + 2.0 * n221.y + n222.y - n200.y - 2.0 * n201.y - n202.y;
float x19 = n202.y + 2.0 * n212.y + n222.y - n200.y - 2.0 * n210.y - n220.y;
float x20 = n220.z + 2.0 * n221.z + n222.z - n200.z - 2.0 * n201.z - n202.z;
float x21 = n202.z + 2.0 * n212.z + n222.z - n200.z - 2.0 * n210.z - n220.z;
float x22 = n220.w + 2.0 * n221.w + n222.w - n200.w - 2.0 * n201.w - n202.w;
float x23 = n202.w + 2.0 * n212.w + n222.w - n200.w - 2.0 * n210.w - n220.w;
float x24 = n320.x + 2.0 * n321.x + n322.x - n300.x - 2.0 * n301.x - n302.x;
float x25 = n302.x + 2.0 * n312.x + n322.x - n300.x - 2.0 * n310.x - n320.x;
float x26 = n320.y + 2.0 * n321.y + n322.y - n300.y - 2.0 * n301.y - n302.y;
float x27 = n302.y + 2.0 * n312.y + n322.y - n300.y - 2.0 * n310.y - n320.y;
float x28 = n320.z + 2.0 * n321.z + n322.z - n300.z - 2.0 * n301.z - n302.z;
float x29 = n302.z + 2.0 * n312.z + n322.z - n300.z - 2.0 * n310.z - n320.z;
float x30 = n320.w + 2.0 * n321.w + n322.w - n300.w - 2.0 * n301.w - n302.w;
float x31 = n302.w + 2.0 * n312.w + n322.w - n300.w - 2.0 * n310.w - n320.w;
float x32 = n011.x;
float x33 = n011.y;
float x34 = n011.z;
float x35 = n011.w;
float x36 = n111.x;
float x37 = n111.y;
float x38 = n111.z;
float x39 = n111.w;
float x40 = n211.x;
float x41 = n211.y;
float x42 = n211.z;
float x43 = n211.w;
float x44 = n311.x;
float x45 = n311.y;
float x46 = n311.z;
float x47 = n311.w;

vec4 d1_0 = Texel(dense1, vec2(0.5, ci + 0.5) / dss);
vec4 d1_1 = Texel(dense1, vec2(1.5, ci + 0.5) / dss);
vec4 d1_2 = Texel(dense1, vec2(2.5, ci + 0.5) / dss);
vec4 d1_3 = Texel(dense1, vec2(3.5, ci + 0.5) / dss);
vec4 d1_4 = Texel(dense1, vec2(4.5, ci + 0.5) / dss);
vec4 d1_5 = Texel(dense1, vec2(5.5, ci + 0.5) / dss);
vec4 d1_6 = Texel(dense1, vec2(6.5, ci + 0.5) / dss);
vec4 d1_7 = Texel(dense1, vec2(7.5, ci + 0.5) / dss);
vec4 d1_8 = Texel(dense1, vec2(8.5, ci + 0.5) / dss);
vec4 d1_9 = Texel(dense1, vec2(9.5, ci + 0.5) / dss);
vec4 d1_10 = Texel(dense1, vec2(10.5, ci + 0.5) / dss);
vec4 d1_11 = Texel(dense1, vec2(11.5, ci + 0.5) / dss);
vec4 d1_12 = Texel(dense1, vec2(12.5, ci + 0.5) / dss);
vec4 d1_13 = Texel(dense1, vec2(13.5, ci + 0.5) / dss);
vec4 d1_14 = Texel(dense1, vec2(14.5, ci + 0.5) / dss);
vec4 d1_15 = Texel(dense1, vec2(15.5, ci + 0.5) / dss);
vec4 d1_16 = Texel(dense1, vec2(16.5, ci + 0.5) / dss);
vec4 d1_17 = Texel(dense1, vec2(17.5, ci + 0.5) / dss);
vec4 d1_18 = Texel(dense1, vec2(18.5, ci + 0.5) / dss);
vec4 d1_19 = Texel(dense1, vec2(19.5, ci + 0.5) / dss);
vec4 d1_20 = Texel(dense1, vec2(20.5, ci + 0.5) / dss);
vec4 d1_21 = Texel(dense1, vec2(21.5, ci + 0.5) / dss);
vec4 d1_22 = Texel(dense1, vec2(22.5, ci + 0.5) / dss);
vec4 d1_23 = Texel(dense1, vec2(23.5, ci + 0.5) / dss);
vec4 d1_24 = Texel(dense1, vec2(24.5, ci + 0.5) / dss);
vec4 d1_25 = Texel(dense1, vec2(25.5, ci + 0.5) / dss);
vec4 d1_26 = Texel(dense1, vec2(26.5, ci + 0.5) / dss);
vec4 d1_27 = Texel(dense1, vec2(27.5, ci + 0.5) / dss);
vec4 d1_28 = Texel(dense1, vec2(28.5, ci + 0.5) / dss);
vec4 d1_29 = Texel(dense1, vec2(29.5, ci + 0.5) / dss);
vec4 d1_30 = Texel(dense1, vec2(30.5, ci + 0.5) / dss);
vec4 d1_31 = Texel(dense1, vec2(31.5, ci + 0.5) / dss);
vec4 d1_32 = Texel(dense1, vec2(32.5, ci + 0.5) / dss);
vec4 d1_33 = Texel(dense1, vec2(33.5, ci + 0.5) / dss);
vec4 d1_34 = Texel(dense1, vec2(34.5, ci + 0.5) / dss);
vec4 d1_35 = Texel(dense1, vec2(35.5, ci + 0.5) / dss);
vec4 d1_36 = Texel(dense1, vec2(36.5, ci + 0.5) / dss);
vec4 d1_37 = Texel(dense1, vec2(37.5, ci + 0.5) / dss);
vec4 d1_38 = Texel(dense1, vec2(38.5, ci + 0.5) / dss);
vec4 d1_39 = Texel(dense1, vec2(39.5, ci + 0.5) / dss);
vec4 d1_40 = Texel(dense1, vec2(40.5, ci + 0.5) / dss);
vec4 d1_41 = Texel(dense1, vec2(41.5, ci + 0.5) / dss);
vec4 d1_42 = Texel(dense1, vec2(42.5, ci + 0.5) / dss);
vec4 d1_43 = Texel(dense1, vec2(43.5, ci + 0.5) / dss);
vec4 d1_44 = Texel(dense1, vec2(44.5, ci + 0.5) / dss);
vec4 d1_45 = Texel(dense1, vec2(45.5, ci + 0.5) / dss);
vec4 d1_46 = Texel(dense1, vec2(46.5, ci + 0.5) / dss);
vec4 d1_47 = Texel(dense1, vec2(47.5, ci + 0.5) / dss);
vec4 d1_48 = Texel(dense1, vec2(48.5, ci + 0.5) / dss);

float h0 = x0 * d1_0.x + x1 * d1_1.x + x2 * d1_2.x + x3 * d1_3.x + x4 * d1_4.x + x5 * d1_5.x + x6 * d1_6.x + x7 * d1_7.x + x8 * d1_8.x + x9 * d1_9.x + x10 * d1_10.x + x11 * d1_11.x + x12 * d1_12.x + x13 * d1_13.x + x14 * d1_14.x + x15 * d1_15.x + x16 * d1_16.x + x17 * d1_17.x + x18 * d1_18.x + x19 * d1_19.x + x20 * d1_20.x + x21 * d1_21.x + x22 * d1_22.x + x23 * d1_23.x + x24 * d1_24.x + x25 * d1_25.x + x26 * d1_26.x + x27 * d1_27.x + x28 * d1_28.x + x29 * d1_29.x + x30 * d1_30.x + x31 * d1_31.x + x32 * d1_32.x + x33 * d1_33.x + x34 * d1_34.x + x35 * d1_35.x + x36 * d1_36.x + x37 * d1_37.x + x38 * d1_38.x + x39 * d1_39.x + x40 * d1_40.x + x41 * d1_41.x + x42 * d1_42.x + x43 * d1_43.x + x44 * d1_44.x + x45 * d1_45.x + x46 * d1_46.x + x47 * d1_47.x + d1_48.x;
float h1 = x0 * d1_0.y + x1 * d1_1.y + x2 * d1_2.y + x3 * d1_3.y + x4 * d1_4.y + x5 * d1_5.y + x6 * d1_6.y + x7 * d1_7.y + x8 * d1_8.y + x9 * d1_9.y + x10 * d1_10.y + x11 * d1_11.y + x12 * d1_12.y + x13 * d1_13.y + x14 * d1_14.y + x15 * d1_15.y + x16 * d1_16.y + x17 * d1_17.y + x18 * d1_18.y + x19 * d1_19.y + x20 * d1_20.y + x21 * d1_21.y + x22 * d1_22.y + x23 * d1_23.y + x24 * d1_24.y + x25 * d1_25.y + x26 * d1_26.y + x27 * d1_27.y + x28 * d1_28.y + x29 * d1_29.y + x30 * d1_30.y + x31 * d1_31.y + x32 * d1_32.y + x33 * d1_33.y + x34 * d1_34.y + x35 * d1_35.y + x36 * d1_36.y + x37 * d1_37.y + x38 * d1_38.y + x39 * d1_39.y + x40 * d1_40.y + x41 * d1_41.y + x42 * d1_42.y + x43 * d1_43.y + x44 * d1_44.y + x45 * d1_45.y + x46 * d1_46.y + x47 * d1_47.y + d1_48.y;
float h2 = x0 * d1_0.z + x1 * d1_1.z + x2 * d1_2.z + x3 * d1_3.z + x4 * d1_4.z + x5 * d1_5.z + x6 * d1_6.z + x7 * d1_7.z + x8 * d1_8.z + x9 * d1_9.z + x10 * d1_10.z + x11 * d1_11.z + x12 * d1_12.z + x13 * d1_13.z + x14 * d1_14.z + x15 * d1_15.z + x16 * d1_16.z + x17 * d1_17.z + x18 * d1_18.z + x19 * d1_19.z + x20 * d1_20.z + x21 * d1_21.z + x22 * d1_22.z + x23 * d1_23.z + x24 * d1_24.z + x25 * d1_25.z + x26 * d1_26.z + x27 * d1_27.z + x28 * d1_28.z + x29 * d1_29.z + x30 * d1_30.z + x31 * d1_31.z + x32 * d1_32.z + x33 * d1_33.z + x34 * d1_34.z + x35 * d1_35.z + x36 * d1_36.z + x37 * d1_37.z + x38 * d1_38.z + x39 * d1_39.z + x40 * d1_40.z + x41 * d1_41.z + x42 * d1_42.z + x43 * d1_43.z + x44 * d1_44.z + x45 * d1_45.z + x46 * d1_46.z + x47 * d1_47.z + d1_48.z;
float h3 = x0 * d1_0.w + x1 * d1_1.w + x2 * d1_2.w + x3 * d1_3.w + x4 * d1_4.w + x5 * d1_5.w + x6 * d1_6.w + x7 * d1_7.w + x8 * d1_8.w + x9 * d1_9.w + x10 * d1_10.w + x11 * d1_11.w + x12 * d1_12.w + x13 * d1_13.w + x14 * d1_14.w + x15 * d1_15.w + x16 * d1_16.w + x17 * d1_17.w + x18 * d1_18.w + x19 * d1_19.w + x20 * d1_20.w + x21 * d1_21.w + x22 * d1_22.w + x23 * d1_23.w + x24 * d1_24.w + x25 * d1_25.w + x26 * d1_26.w + x27 * d1_27.w + x28 * d1_28.w + x29 * d1_29.w + x30 * d1_30.w + x31 * d1_31.w + x32 * d1_32.w + x33 * d1_33.w + x34 * d1_34.w + x35 * d1_35.w + x36 * d1_36.w + x37 * d1_37.w + x38 * d1_38.w + x39 * d1_39.w + x40 * d1_40.w + x41 * d1_41.w + x42 * d1_42.w + x43 * d1_43.w + x44 * d1_44.w + x45 * d1_45.w + x46 * d1_46.w + x47 * d1_47.w + d1_48.w;

    return vec4(h0, h1, h2, h3);
}
